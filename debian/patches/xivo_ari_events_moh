Index: asterisk-18.10.1/main/stasis_channels.c
===================================================================
--- asterisk-18.10.1.orig/main/stasis_channels.c
+++ asterisk-18.10.1/main/stasis_channels.c
@@ -1573,6 +1573,47 @@ static struct ast_json *unhold_to_json(s
 		"channel", json_channel);
 }
 
+static struct ast_json *moh_start_to_json(struct stasis_message *message,
+	const struct stasis_message_sanitizer *sanitize)
+{
+	struct ast_channel_blob *channel_blob = stasis_message_data(message);
+	struct ast_json *blob = channel_blob->blob;
+	struct ast_channel_snapshot *snapshot = channel_blob->snapshot;
+	const char *musicclass = ast_json_string_get(ast_json_object_get(blob, "class"));
+	const struct timeval *tv = stasis_message_timestamp(message);
+	struct ast_json *json_channel;
+
+	json_channel = ast_channel_snapshot_to_json(snapshot, sanitize);
+	if (!json_channel) {
+		return NULL;
+	}
+
+	return ast_json_pack("{s: s, s: o, s: s, s: o}",
+		"type", "ChannelMohStart",
+		"timestamp", ast_json_timeval(*tv, NULL),
+		"moh_class", S_OR(musicclass, "N/A"),
+		"channel", json_channel);
+}
+
+static struct ast_json *moh_stop_to_json(struct stasis_message *message,
+	const struct stasis_message_sanitizer *sanitize)
+{
+	struct ast_channel_blob *channel_blob = stasis_message_data(message);
+	struct ast_channel_snapshot *snapshot = channel_blob->snapshot;
+	const struct timeval *tv = stasis_message_timestamp(message);
+	struct ast_json *json_channel;
+
+	json_channel = ast_channel_snapshot_to_json(snapshot, sanitize);
+	if (!json_channel) {
+		return NULL;
+	}
+
+	return ast_json_pack("{s: s, s: o, s: o}",
+		"type", "ChannelMohStop",
+		"timestamp", ast_json_timeval(*tv, NULL),
+		"channel", json_channel);
+}
+
 /*!
  * @{ \brief Define channel message types.
  */
@@ -1604,8 +1645,12 @@ STASIS_MESSAGE_TYPE_DEFN(ast_channel_cha
 STASIS_MESSAGE_TYPE_DEFN(ast_channel_chanspy_stop_type);
 STASIS_MESSAGE_TYPE_DEFN(ast_channel_fax_type);
 STASIS_MESSAGE_TYPE_DEFN(ast_channel_hangup_handler_type);
-STASIS_MESSAGE_TYPE_DEFN(ast_channel_moh_start_type);
-STASIS_MESSAGE_TYPE_DEFN(ast_channel_moh_stop_type);
+STASIS_MESSAGE_TYPE_DEFN(ast_channel_moh_start_type,
+	.to_json = moh_start_to_json,
+	);
+STASIS_MESSAGE_TYPE_DEFN(ast_channel_moh_stop_type,
+	.to_json = moh_stop_to_json,
+	);
 STASIS_MESSAGE_TYPE_DEFN(ast_channel_monitor_start_type);
 STASIS_MESSAGE_TYPE_DEFN(ast_channel_monitor_stop_type);
 STASIS_MESSAGE_TYPE_DEFN(ast_channel_mixmonitor_start_type);
Index: asterisk-18.10.1/rest-api/api-docs/events.json
===================================================================
--- asterisk-18.10.1.orig/rest-api/api-docs/events.json
+++ asterisk-18.10.1/rest-api/api-docs/events.json
@@ -189,7 +189,9 @@
 				"StasisStart",
 				"TextMessageReceived",
 				"ChannelConnectedLine",
-				"PeerStatusChange"
+				"PeerStatusChange",
+				"ChannelMohStart",
+				"ChannelMohStop"
 			]
 		},
 		"ContactInfo": {
@@ -913,6 +915,33 @@
 					"description": "The channel whose connected line has changed."
 				}
 			}
+		},
+		"ChannelMohStart": {
+			"id": "ChannelMohStart",
+			"description": "MOH started on the channel.",
+			"properties": {
+				"channel": {
+					"required": true,
+					"type": "Channel",
+					"description": "The channel on which the MOH started."
+				},
+				"moh_class": {
+					"required": true,
+					"type": "string",
+					"description": "The name of the MOH class that started"
+				}
+			}
+		},
+		"ChannelMohStop": {
+			"id": "ChannelMohStop",
+			"description": "MOH stopped on the channel.",
+			"properties": {
+				"channel": {
+					"required": true,
+					"type": "Channel",
+					"description": "The channel on which the MOH stopped."
+				}
+			}
 		}
 	}
 }
